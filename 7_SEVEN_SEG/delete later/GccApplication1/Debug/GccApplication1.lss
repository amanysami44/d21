
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000676  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000006ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  00800060  00800060  000006ea  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  000006ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000074c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00000788  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f08  00000000  00000000  000008c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000085a  00000000  00000000  000017c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000081e  00000000  00000000  00002022  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000274  00000000  00000000  00002840  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004bb  00000000  00000000  00002ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000016ad  00000000  00000000  00002f6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  0000461c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 84 00 	jmp	0x108	; 0x108 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e7       	ldi	r30, 0x76	; 118
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a5 36       	cpi	r26, 0x65	; 101
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 39 03 	jmp	0x672	; 0x672 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:

extern u32 num_of_ov;

int main(void)
{
	TIMER_0_INIT();
  92:	0e 94 e5 02 	call	0x5ca	; 0x5ca <TIMER_0_INIT>
	LED_INIT(M_LED);
  96:	81 e0       	ldi	r24, 0x01	; 1
  98:	0e 94 c0 00 	call	0x180	; 0x180 <LED_INIT>
	P_B_INIT(2);
  9c:	82 e0       	ldi	r24, 0x02	; 2
  9e:	0e 94 e7 00 	call	0x1ce	; 0x1ce <P_B_INIT>
	TIMER_0_START(300);
  a2:	6c e2       	ldi	r22, 0x2C	; 44
  a4:	71 e0       	ldi	r23, 0x01	; 1
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <TIMER_0_START>
		
    while(1)
    {
		if (P_B_READ(2)==1)
  ae:	82 e0       	ldi	r24, 0x02	; 2
  b0:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <P_B_READ>
  b4:	81 30       	cpi	r24, 0x01	; 1
  b6:	d9 f7       	brne	.-10     	; 0xae <main+0x1c>
		{
			//LED_TOGGLE(M_LED);
			//_delay_ms(500);
			TIMER_0_STOP();
  b8:	0e 94 15 03 	call	0x62a	; 0x62a <TIMER_0_STOP>
  bc:	f8 cf       	rjmp	.-16     	; 0xae <main+0x1c>

000000be <__vector_1>:
		}
    }
}

ISR(INT0_vect)
{
  be:	1f 92       	push	r1
  c0:	0f 92       	push	r0
  c2:	0f b6       	in	r0, 0x3f	; 63
  c4:	0f 92       	push	r0
  c6:	11 24       	eor	r1, r1
  c8:	2f 93       	push	r18
  ca:	3f 93       	push	r19
  cc:	4f 93       	push	r20
  ce:	5f 93       	push	r21
  d0:	6f 93       	push	r22
  d2:	7f 93       	push	r23
  d4:	8f 93       	push	r24
  d6:	9f 93       	push	r25
  d8:	af 93       	push	r26
  da:	bf 93       	push	r27
  dc:	ef 93       	push	r30
  de:	ff 93       	push	r31
	LED_TOGGLE(M_LED);
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	0e 94 d5 00 	call	0x1aa	; 0x1aa <LED_TOGGLE>
}
  e6:	ff 91       	pop	r31
  e8:	ef 91       	pop	r30
  ea:	bf 91       	pop	r27
  ec:	af 91       	pop	r26
  ee:	9f 91       	pop	r25
  f0:	8f 91       	pop	r24
  f2:	7f 91       	pop	r23
  f4:	6f 91       	pop	r22
  f6:	5f 91       	pop	r21
  f8:	4f 91       	pop	r20
  fa:	3f 91       	pop	r19
  fc:	2f 91       	pop	r18
  fe:	0f 90       	pop	r0
 100:	0f be       	out	0x3f, r0	; 63
 102:	0f 90       	pop	r0
 104:	1f 90       	pop	r1
 106:	18 95       	reti

00000108 <__vector_11>:

ISR(TIMER0_OVF_vect)
{
 108:	1f 92       	push	r1
 10a:	0f 92       	push	r0
 10c:	0f b6       	in	r0, 0x3f	; 63
 10e:	0f 92       	push	r0
 110:	11 24       	eor	r1, r1
 112:	2f 93       	push	r18
 114:	3f 93       	push	r19
 116:	4f 93       	push	r20
 118:	5f 93       	push	r21
 11a:	6f 93       	push	r22
 11c:	7f 93       	push	r23
 11e:	8f 93       	push	r24
 120:	9f 93       	push	r25
 122:	af 93       	push	r26
 124:	bf 93       	push	r27
 126:	ef 93       	push	r30
 128:	ff 93       	push	r31
	static u8 x;
	x++;
 12a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 12e:	8f 5f       	subi	r24, 0xFF	; 255
 130:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	if(x == num_of_ov)
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	a0 e0       	ldi	r26, 0x00	; 0
 138:	b0 e0       	ldi	r27, 0x00	; 0
 13a:	40 91 61 00 	lds	r20, 0x0061	; 0x800061 <num_of_ov>
 13e:	50 91 62 00 	lds	r21, 0x0062	; 0x800062 <num_of_ov+0x1>
 142:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <num_of_ov+0x2>
 146:	70 91 64 00 	lds	r23, 0x0064	; 0x800064 <num_of_ov+0x3>
 14a:	84 17       	cp	r24, r20
 14c:	95 07       	cpc	r25, r21
 14e:	a6 07       	cpc	r26, r22
 150:	b7 07       	cpc	r27, r23
 152:	29 f4       	brne	.+10     	; 0x15e <__vector_11+0x56>
	{
		LED_TOGGLE(M_LED);
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	0e 94 d5 00 	call	0x1aa	; 0x1aa <LED_TOGGLE>
		x = 0;
 15a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
	}
}
 15e:	ff 91       	pop	r31
 160:	ef 91       	pop	r30
 162:	bf 91       	pop	r27
 164:	af 91       	pop	r26
 166:	9f 91       	pop	r25
 168:	8f 91       	pop	r24
 16a:	7f 91       	pop	r23
 16c:	6f 91       	pop	r22
 16e:	5f 91       	pop	r21
 170:	4f 91       	pop	r20
 172:	3f 91       	pop	r19
 174:	2f 91       	pop	r18
 176:	0f 90       	pop	r0
 178:	0f be       	out	0x3f, r0	; 63
 17a:	0f 90       	pop	r0
 17c:	1f 90       	pop	r1
 17e:	18 95       	reti

00000180 <LED_INIT>:
 180:	81 30       	cpi	r24, 0x01	; 1
 182:	49 f0       	breq	.+18     	; 0x196 <LED_INIT+0x16>
 184:	18 f0       	brcs	.+6      	; 0x18c <LED_INIT+0xc>
 186:	82 30       	cpi	r24, 0x02	; 2
 188:	59 f0       	breq	.+22     	; 0x1a0 <LED_INIT+0x20>
 18a:	08 95       	ret
 18c:	61 e0       	ldi	r22, 0x01	; 1
 18e:	80 e2       	ldi	r24, 0x20	; 32
 190:	0e 94 10 01 	call	0x220	; 0x220 <PIN_MODE>
 194:	08 95       	ret
 196:	61 e0       	ldi	r22, 0x01	; 1
 198:	85 e2       	ldi	r24, 0x25	; 37
 19a:	0e 94 10 01 	call	0x220	; 0x220 <PIN_MODE>
 19e:	08 95       	ret
 1a0:	61 e0       	ldi	r22, 0x01	; 1
 1a2:	87 e1       	ldi	r24, 0x17	; 23
 1a4:	0e 94 10 01 	call	0x220	; 0x220 <PIN_MODE>
 1a8:	08 95       	ret

000001aa <LED_TOGGLE>:
 1aa:	81 30       	cpi	r24, 0x01	; 1
 1ac:	41 f0       	breq	.+16     	; 0x1be <LED_TOGGLE+0x14>
 1ae:	18 f0       	brcs	.+6      	; 0x1b6 <LED_TOGGLE+0xc>
 1b0:	82 30       	cpi	r24, 0x02	; 2
 1b2:	49 f0       	breq	.+18     	; 0x1c6 <LED_TOGGLE+0x1c>
 1b4:	08 95       	ret
 1b6:	80 e2       	ldi	r24, 0x20	; 32
 1b8:	0e 94 ff 01 	call	0x3fe	; 0x3fe <PIN_TOGGLE>
 1bc:	08 95       	ret
 1be:	85 e2       	ldi	r24, 0x25	; 37
 1c0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <PIN_TOGGLE>
 1c4:	08 95       	ret
 1c6:	87 e1       	ldi	r24, 0x17	; 23
 1c8:	0e 94 ff 01 	call	0x3fe	; 0x3fe <PIN_TOGGLE>
 1cc:	08 95       	ret

000001ce <P_B_INIT>:
 1ce:	81 30       	cpi	r24, 0x01	; 1
 1d0:	49 f0       	breq	.+18     	; 0x1e4 <P_B_INIT+0x16>
 1d2:	18 f0       	brcs	.+6      	; 0x1da <P_B_INIT+0xc>
 1d4:	82 30       	cpi	r24, 0x02	; 2
 1d6:	59 f0       	breq	.+22     	; 0x1ee <P_B_INIT+0x20>
 1d8:	08 95       	ret
 1da:	60 e0       	ldi	r22, 0x00	; 0
 1dc:	8a e0       	ldi	r24, 0x0A	; 10
 1de:	0e 94 10 01 	call	0x220	; 0x220 <PIN_MODE>
 1e2:	08 95       	ret
 1e4:	60 e0       	ldi	r22, 0x00	; 0
 1e6:	8e e0       	ldi	r24, 0x0E	; 14
 1e8:	0e 94 10 01 	call	0x220	; 0x220 <PIN_MODE>
 1ec:	08 95       	ret
 1ee:	60 e0       	ldi	r22, 0x00	; 0
 1f0:	86 e1       	ldi	r24, 0x16	; 22
 1f2:	0e 94 10 01 	call	0x220	; 0x220 <PIN_MODE>
 1f6:	08 95       	ret

000001f8 <P_B_READ>:
 1f8:	81 30       	cpi	r24, 0x01	; 1
 1fa:	41 f0       	breq	.+16     	; 0x20c <P_B_READ+0x14>
 1fc:	18 f0       	brcs	.+6      	; 0x204 <P_B_READ+0xc>
 1fe:	82 30       	cpi	r24, 0x02	; 2
 200:	49 f0       	breq	.+18     	; 0x214 <P_B_READ+0x1c>
 202:	0c c0       	rjmp	.+24     	; 0x21c <P_B_READ+0x24>
 204:	8a e0       	ldi	r24, 0x0A	; 10
 206:	0e 94 75 02 	call	0x4ea	; 0x4ea <PIN_READ>
 20a:	08 95       	ret
 20c:	8e e0       	ldi	r24, 0x0E	; 14
 20e:	0e 94 75 02 	call	0x4ea	; 0x4ea <PIN_READ>
 212:	08 95       	ret
 214:	86 e1       	ldi	r24, 0x16	; 22
 216:	0e 94 75 02 	call	0x4ea	; 0x4ea <PIN_READ>
 21a:	08 95       	ret
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	08 95       	ret

00000220 <PIN_MODE>:
 220:	9d ec       	ldi	r25, 0xCD	; 205
 222:	89 9f       	mul	r24, r25
 224:	91 2d       	mov	r25, r1
 226:	11 24       	eor	r1, r1
 228:	96 95       	lsr	r25
 22a:	96 95       	lsr	r25
 22c:	96 95       	lsr	r25
 22e:	66 23       	and	r22, r22
 230:	09 f4       	brne	.+2      	; 0x234 <PIN_MODE+0x14>
 232:	72 c0       	rjmp	.+228    	; 0x318 <PIN_MODE+0xf8>
 234:	61 30       	cpi	r22, 0x01	; 1
 236:	09 f0       	breq	.+2      	; 0x23a <PIN_MODE+0x1a>
 238:	e1 c0       	rjmp	.+450    	; 0x3fc <PIN_MODE+0x1dc>
 23a:	92 30       	cpi	r25, 0x02	; 2
 23c:	21 f1       	breq	.+72     	; 0x286 <PIN_MODE+0x66>
 23e:	18 f4       	brcc	.+6      	; 0x246 <PIN_MODE+0x26>
 240:	91 30       	cpi	r25, 0x01	; 1
 242:	39 f0       	breq	.+14     	; 0x252 <PIN_MODE+0x32>
 244:	08 95       	ret
 246:	93 30       	cpi	r25, 0x03	; 3
 248:	c1 f1       	breq	.+112    	; 0x2ba <PIN_MODE+0x9a>
 24a:	94 30       	cpi	r25, 0x04	; 4
 24c:	09 f4       	brne	.+2      	; 0x250 <PIN_MODE+0x30>
 24e:	4c c0       	rjmp	.+152    	; 0x2e8 <PIN_MODE+0xc8>
 250:	08 95       	ret
 252:	47 b3       	in	r20, 0x17	; 23
 254:	9d ec       	ldi	r25, 0xCD	; 205
 256:	89 9f       	mul	r24, r25
 258:	91 2d       	mov	r25, r1
 25a:	11 24       	eor	r1, r1
 25c:	96 95       	lsr	r25
 25e:	96 95       	lsr	r25
 260:	96 95       	lsr	r25
 262:	99 0f       	add	r25, r25
 264:	29 2f       	mov	r18, r25
 266:	22 0f       	add	r18, r18
 268:	22 0f       	add	r18, r18
 26a:	92 0f       	add	r25, r18
 26c:	89 1b       	sub	r24, r25
 26e:	21 e0       	ldi	r18, 0x01	; 1
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	b9 01       	movw	r22, r18
 274:	02 c0       	rjmp	.+4      	; 0x27a <PIN_MODE+0x5a>
 276:	66 0f       	add	r22, r22
 278:	77 1f       	adc	r23, r23
 27a:	8a 95       	dec	r24
 27c:	e2 f7       	brpl	.-8      	; 0x276 <PIN_MODE+0x56>
 27e:	cb 01       	movw	r24, r22
 280:	84 2b       	or	r24, r20
 282:	87 bb       	out	0x17, r24	; 23
 284:	08 95       	ret
 286:	41 b3       	in	r20, 0x11	; 17
 288:	9d ec       	ldi	r25, 0xCD	; 205
 28a:	89 9f       	mul	r24, r25
 28c:	91 2d       	mov	r25, r1
 28e:	11 24       	eor	r1, r1
 290:	92 95       	swap	r25
 292:	9f 70       	andi	r25, 0x0F	; 15
 294:	99 0f       	add	r25, r25
 296:	99 0f       	add	r25, r25
 298:	29 2f       	mov	r18, r25
 29a:	22 0f       	add	r18, r18
 29c:	22 0f       	add	r18, r18
 29e:	92 0f       	add	r25, r18
 2a0:	89 1b       	sub	r24, r25
 2a2:	21 e0       	ldi	r18, 0x01	; 1
 2a4:	30 e0       	ldi	r19, 0x00	; 0
 2a6:	b9 01       	movw	r22, r18
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <PIN_MODE+0x8e>
 2aa:	66 0f       	add	r22, r22
 2ac:	77 1f       	adc	r23, r23
 2ae:	8a 95       	dec	r24
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <PIN_MODE+0x8a>
 2b2:	cb 01       	movw	r24, r22
 2b4:	84 2b       	or	r24, r20
 2b6:	81 bb       	out	0x11, r24	; 17
 2b8:	08 95       	ret
 2ba:	44 b3       	in	r20, 0x14	; 20
 2bc:	99 e8       	ldi	r25, 0x89	; 137
 2be:	89 9f       	mul	r24, r25
 2c0:	91 2d       	mov	r25, r1
 2c2:	11 24       	eor	r1, r1
 2c4:	92 95       	swap	r25
 2c6:	9f 70       	andi	r25, 0x0F	; 15
 2c8:	7e e1       	ldi	r23, 0x1E	; 30
 2ca:	97 9f       	mul	r25, r23
 2cc:	80 19       	sub	r24, r0
 2ce:	11 24       	eor	r1, r1
 2d0:	21 e0       	ldi	r18, 0x01	; 1
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	b9 01       	movw	r22, r18
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <PIN_MODE+0xbc>
 2d8:	66 0f       	add	r22, r22
 2da:	77 1f       	adc	r23, r23
 2dc:	8a 95       	dec	r24
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <PIN_MODE+0xb8>
 2e0:	cb 01       	movw	r24, r22
 2e2:	84 2b       	or	r24, r20
 2e4:	84 bb       	out	0x14, r24	; 20
 2e6:	08 95       	ret
 2e8:	4a b3       	in	r20, 0x1a	; 26
 2ea:	9d ec       	ldi	r25, 0xCD	; 205
 2ec:	89 9f       	mul	r24, r25
 2ee:	91 2d       	mov	r25, r1
 2f0:	11 24       	eor	r1, r1
 2f2:	92 95       	swap	r25
 2f4:	96 95       	lsr	r25
 2f6:	97 70       	andi	r25, 0x07	; 7
 2f8:	78 e2       	ldi	r23, 0x28	; 40
 2fa:	97 9f       	mul	r25, r23
 2fc:	80 19       	sub	r24, r0
 2fe:	11 24       	eor	r1, r1
 300:	21 e0       	ldi	r18, 0x01	; 1
 302:	30 e0       	ldi	r19, 0x00	; 0
 304:	b9 01       	movw	r22, r18
 306:	02 c0       	rjmp	.+4      	; 0x30c <PIN_MODE+0xec>
 308:	66 0f       	add	r22, r22
 30a:	77 1f       	adc	r23, r23
 30c:	8a 95       	dec	r24
 30e:	e2 f7       	brpl	.-8      	; 0x308 <PIN_MODE+0xe8>
 310:	cb 01       	movw	r24, r22
 312:	84 2b       	or	r24, r20
 314:	8a bb       	out	0x1a, r24	; 26
 316:	08 95       	ret
 318:	92 30       	cpi	r25, 0x02	; 2
 31a:	29 f1       	breq	.+74     	; 0x366 <PIN_MODE+0x146>
 31c:	18 f4       	brcc	.+6      	; 0x324 <PIN_MODE+0x104>
 31e:	91 30       	cpi	r25, 0x01	; 1
 320:	39 f0       	breq	.+14     	; 0x330 <PIN_MODE+0x110>
 322:	08 95       	ret
 324:	93 30       	cpi	r25, 0x03	; 3
 326:	d1 f1       	breq	.+116    	; 0x39c <PIN_MODE+0x17c>
 328:	94 30       	cpi	r25, 0x04	; 4
 32a:	09 f4       	brne	.+2      	; 0x32e <PIN_MODE+0x10e>
 32c:	4f c0       	rjmp	.+158    	; 0x3cc <PIN_MODE+0x1ac>
 32e:	08 95       	ret
 330:	47 b3       	in	r20, 0x17	; 23
 332:	9d ec       	ldi	r25, 0xCD	; 205
 334:	89 9f       	mul	r24, r25
 336:	91 2d       	mov	r25, r1
 338:	11 24       	eor	r1, r1
 33a:	96 95       	lsr	r25
 33c:	96 95       	lsr	r25
 33e:	96 95       	lsr	r25
 340:	99 0f       	add	r25, r25
 342:	29 2f       	mov	r18, r25
 344:	22 0f       	add	r18, r18
 346:	22 0f       	add	r18, r18
 348:	92 0f       	add	r25, r18
 34a:	89 1b       	sub	r24, r25
 34c:	21 e0       	ldi	r18, 0x01	; 1
 34e:	30 e0       	ldi	r19, 0x00	; 0
 350:	b9 01       	movw	r22, r18
 352:	02 c0       	rjmp	.+4      	; 0x358 <PIN_MODE+0x138>
 354:	66 0f       	add	r22, r22
 356:	77 1f       	adc	r23, r23
 358:	8a 95       	dec	r24
 35a:	e2 f7       	brpl	.-8      	; 0x354 <PIN_MODE+0x134>
 35c:	cb 01       	movw	r24, r22
 35e:	80 95       	com	r24
 360:	84 23       	and	r24, r20
 362:	87 bb       	out	0x17, r24	; 23
 364:	08 95       	ret
 366:	41 b3       	in	r20, 0x11	; 17
 368:	9d ec       	ldi	r25, 0xCD	; 205
 36a:	89 9f       	mul	r24, r25
 36c:	91 2d       	mov	r25, r1
 36e:	11 24       	eor	r1, r1
 370:	92 95       	swap	r25
 372:	9f 70       	andi	r25, 0x0F	; 15
 374:	99 0f       	add	r25, r25
 376:	99 0f       	add	r25, r25
 378:	29 2f       	mov	r18, r25
 37a:	22 0f       	add	r18, r18
 37c:	22 0f       	add	r18, r18
 37e:	92 0f       	add	r25, r18
 380:	89 1b       	sub	r24, r25
 382:	21 e0       	ldi	r18, 0x01	; 1
 384:	30 e0       	ldi	r19, 0x00	; 0
 386:	b9 01       	movw	r22, r18
 388:	02 c0       	rjmp	.+4      	; 0x38e <PIN_MODE+0x16e>
 38a:	66 0f       	add	r22, r22
 38c:	77 1f       	adc	r23, r23
 38e:	8a 95       	dec	r24
 390:	e2 f7       	brpl	.-8      	; 0x38a <PIN_MODE+0x16a>
 392:	cb 01       	movw	r24, r22
 394:	80 95       	com	r24
 396:	84 23       	and	r24, r20
 398:	81 bb       	out	0x11, r24	; 17
 39a:	08 95       	ret
 39c:	44 b3       	in	r20, 0x14	; 20
 39e:	99 e8       	ldi	r25, 0x89	; 137
 3a0:	89 9f       	mul	r24, r25
 3a2:	91 2d       	mov	r25, r1
 3a4:	11 24       	eor	r1, r1
 3a6:	92 95       	swap	r25
 3a8:	9f 70       	andi	r25, 0x0F	; 15
 3aa:	7e e1       	ldi	r23, 0x1E	; 30
 3ac:	97 9f       	mul	r25, r23
 3ae:	80 19       	sub	r24, r0
 3b0:	11 24       	eor	r1, r1
 3b2:	21 e0       	ldi	r18, 0x01	; 1
 3b4:	30 e0       	ldi	r19, 0x00	; 0
 3b6:	b9 01       	movw	r22, r18
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <PIN_MODE+0x19e>
 3ba:	66 0f       	add	r22, r22
 3bc:	77 1f       	adc	r23, r23
 3be:	8a 95       	dec	r24
 3c0:	e2 f7       	brpl	.-8      	; 0x3ba <PIN_MODE+0x19a>
 3c2:	cb 01       	movw	r24, r22
 3c4:	80 95       	com	r24
 3c6:	84 23       	and	r24, r20
 3c8:	84 bb       	out	0x14, r24	; 20
 3ca:	08 95       	ret
 3cc:	4a b3       	in	r20, 0x1a	; 26
 3ce:	9d ec       	ldi	r25, 0xCD	; 205
 3d0:	89 9f       	mul	r24, r25
 3d2:	91 2d       	mov	r25, r1
 3d4:	11 24       	eor	r1, r1
 3d6:	92 95       	swap	r25
 3d8:	96 95       	lsr	r25
 3da:	97 70       	andi	r25, 0x07	; 7
 3dc:	78 e2       	ldi	r23, 0x28	; 40
 3de:	97 9f       	mul	r25, r23
 3e0:	80 19       	sub	r24, r0
 3e2:	11 24       	eor	r1, r1
 3e4:	21 e0       	ldi	r18, 0x01	; 1
 3e6:	30 e0       	ldi	r19, 0x00	; 0
 3e8:	b9 01       	movw	r22, r18
 3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <PIN_MODE+0x1d0>
 3ec:	66 0f       	add	r22, r22
 3ee:	77 1f       	adc	r23, r23
 3f0:	8a 95       	dec	r24
 3f2:	e2 f7       	brpl	.-8      	; 0x3ec <PIN_MODE+0x1cc>
 3f4:	cb 01       	movw	r24, r22
 3f6:	80 95       	com	r24
 3f8:	84 23       	and	r24, r20
 3fa:	8a bb       	out	0x1a, r24	; 26
 3fc:	08 95       	ret

000003fe <PIN_TOGGLE>:
 3fe:	9d ec       	ldi	r25, 0xCD	; 205
 400:	89 9f       	mul	r24, r25
 402:	91 2d       	mov	r25, r1
 404:	11 24       	eor	r1, r1
 406:	96 95       	lsr	r25
 408:	96 95       	lsr	r25
 40a:	96 95       	lsr	r25
 40c:	92 30       	cpi	r25, 0x02	; 2
 40e:	21 f1       	breq	.+72     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 410:	18 f4       	brcc	.+6      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 412:	91 30       	cpi	r25, 0x01	; 1
 414:	39 f0       	breq	.+14     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 416:	08 95       	ret
 418:	93 30       	cpi	r25, 0x03	; 3
 41a:	c1 f1       	breq	.+112    	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 41c:	94 30       	cpi	r25, 0x04	; 4
 41e:	09 f4       	brne	.+2      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 420:	4c c0       	rjmp	.+152    	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 422:	08 95       	ret
 424:	48 b3       	in	r20, 0x18	; 24
 426:	9d ec       	ldi	r25, 0xCD	; 205
 428:	89 9f       	mul	r24, r25
 42a:	91 2d       	mov	r25, r1
 42c:	11 24       	eor	r1, r1
 42e:	96 95       	lsr	r25
 430:	96 95       	lsr	r25
 432:	96 95       	lsr	r25
 434:	99 0f       	add	r25, r25
 436:	29 2f       	mov	r18, r25
 438:	22 0f       	add	r18, r18
 43a:	22 0f       	add	r18, r18
 43c:	92 0f       	add	r25, r18
 43e:	89 1b       	sub	r24, r25
 440:	21 e0       	ldi	r18, 0x01	; 1
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	b9 01       	movw	r22, r18
 446:	02 c0       	rjmp	.+4      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 448:	66 0f       	add	r22, r22
 44a:	77 1f       	adc	r23, r23
 44c:	8a 95       	dec	r24
 44e:	e2 f7       	brpl	.-8      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 450:	cb 01       	movw	r24, r22
 452:	84 27       	eor	r24, r20
 454:	88 bb       	out	0x18, r24	; 24
 456:	08 95       	ret
 458:	42 b3       	in	r20, 0x12	; 18
 45a:	9d ec       	ldi	r25, 0xCD	; 205
 45c:	89 9f       	mul	r24, r25
 45e:	91 2d       	mov	r25, r1
 460:	11 24       	eor	r1, r1
 462:	92 95       	swap	r25
 464:	9f 70       	andi	r25, 0x0F	; 15
 466:	99 0f       	add	r25, r25
 468:	99 0f       	add	r25, r25
 46a:	29 2f       	mov	r18, r25
 46c:	22 0f       	add	r18, r18
 46e:	22 0f       	add	r18, r18
 470:	92 0f       	add	r25, r18
 472:	89 1b       	sub	r24, r25
 474:	21 e0       	ldi	r18, 0x01	; 1
 476:	30 e0       	ldi	r19, 0x00	; 0
 478:	b9 01       	movw	r22, r18
 47a:	02 c0       	rjmp	.+4      	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 47c:	66 0f       	add	r22, r22
 47e:	77 1f       	adc	r23, r23
 480:	8a 95       	dec	r24
 482:	e2 f7       	brpl	.-8      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 484:	cb 01       	movw	r24, r22
 486:	84 27       	eor	r24, r20
 488:	82 bb       	out	0x12, r24	; 18
 48a:	08 95       	ret
 48c:	45 b3       	in	r20, 0x15	; 21
 48e:	99 e8       	ldi	r25, 0x89	; 137
 490:	89 9f       	mul	r24, r25
 492:	91 2d       	mov	r25, r1
 494:	11 24       	eor	r1, r1
 496:	92 95       	swap	r25
 498:	9f 70       	andi	r25, 0x0F	; 15
 49a:	7e e1       	ldi	r23, 0x1E	; 30
 49c:	97 9f       	mul	r25, r23
 49e:	80 19       	sub	r24, r0
 4a0:	11 24       	eor	r1, r1
 4a2:	21 e0       	ldi	r18, 0x01	; 1
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	b9 01       	movw	r22, r18
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4aa:	66 0f       	add	r22, r22
 4ac:	77 1f       	adc	r23, r23
 4ae:	8a 95       	dec	r24
 4b0:	e2 f7       	brpl	.-8      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 4b2:	cb 01       	movw	r24, r22
 4b4:	84 27       	eor	r24, r20
 4b6:	85 bb       	out	0x15, r24	; 21
 4b8:	08 95       	ret
 4ba:	4b b3       	in	r20, 0x1b	; 27
 4bc:	9d ec       	ldi	r25, 0xCD	; 205
 4be:	89 9f       	mul	r24, r25
 4c0:	91 2d       	mov	r25, r1
 4c2:	11 24       	eor	r1, r1
 4c4:	92 95       	swap	r25
 4c6:	96 95       	lsr	r25
 4c8:	97 70       	andi	r25, 0x07	; 7
 4ca:	78 e2       	ldi	r23, 0x28	; 40
 4cc:	97 9f       	mul	r25, r23
 4ce:	80 19       	sub	r24, r0
 4d0:	11 24       	eor	r1, r1
 4d2:	21 e0       	ldi	r18, 0x01	; 1
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	b9 01       	movw	r22, r18
 4d8:	02 c0       	rjmp	.+4      	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
 4da:	66 0f       	add	r22, r22
 4dc:	77 1f       	adc	r23, r23
 4de:	8a 95       	dec	r24
 4e0:	e2 f7       	brpl	.-8      	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4e2:	cb 01       	movw	r24, r22
 4e4:	84 27       	eor	r24, r20
 4e6:	8b bb       	out	0x1b, r24	; 27
 4e8:	08 95       	ret

000004ea <PIN_READ>:
 4ea:	9d ec       	ldi	r25, 0xCD	; 205
 4ec:	89 9f       	mul	r24, r25
 4ee:	91 2d       	mov	r25, r1
 4f0:	11 24       	eor	r1, r1
 4f2:	96 95       	lsr	r25
 4f4:	96 95       	lsr	r25
 4f6:	96 95       	lsr	r25
 4f8:	92 30       	cpi	r25, 0x02	; 2
 4fa:	11 f1       	breq	.+68     	; 0x540 <PIN_READ+0x56>
 4fc:	18 f4       	brcc	.+6      	; 0x504 <PIN_READ+0x1a>
 4fe:	91 30       	cpi	r25, 0x01	; 1
 500:	39 f0       	breq	.+14     	; 0x510 <PIN_READ+0x26>
 502:	61 c0       	rjmp	.+194    	; 0x5c6 <PIN_READ+0xdc>
 504:	93 30       	cpi	r25, 0x03	; 3
 506:	a1 f1       	breq	.+104    	; 0x570 <PIN_READ+0x86>
 508:	94 30       	cpi	r25, 0x04	; 4
 50a:	09 f4       	brne	.+2      	; 0x50e <PIN_READ+0x24>
 50c:	46 c0       	rjmp	.+140    	; 0x59a <PIN_READ+0xb0>
 50e:	5b c0       	rjmp	.+182    	; 0x5c6 <PIN_READ+0xdc>
 510:	26 b3       	in	r18, 0x16	; 22
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	9d ec       	ldi	r25, 0xCD	; 205
 516:	89 9f       	mul	r24, r25
 518:	91 2d       	mov	r25, r1
 51a:	11 24       	eor	r1, r1
 51c:	96 95       	lsr	r25
 51e:	96 95       	lsr	r25
 520:	96 95       	lsr	r25
 522:	99 0f       	add	r25, r25
 524:	49 2f       	mov	r20, r25
 526:	44 0f       	add	r20, r20
 528:	44 0f       	add	r20, r20
 52a:	94 0f       	add	r25, r20
 52c:	89 1b       	sub	r24, r25
 52e:	a9 01       	movw	r20, r18
 530:	02 c0       	rjmp	.+4      	; 0x536 <PIN_READ+0x4c>
 532:	55 95       	asr	r21
 534:	47 95       	ror	r20
 536:	8a 95       	dec	r24
 538:	e2 f7       	brpl	.-8      	; 0x532 <PIN_READ+0x48>
 53a:	ca 01       	movw	r24, r20
 53c:	81 70       	andi	r24, 0x01	; 1
 53e:	08 95       	ret
 540:	20 b3       	in	r18, 0x10	; 16
 542:	30 e0       	ldi	r19, 0x00	; 0
 544:	9d ec       	ldi	r25, 0xCD	; 205
 546:	89 9f       	mul	r24, r25
 548:	91 2d       	mov	r25, r1
 54a:	11 24       	eor	r1, r1
 54c:	92 95       	swap	r25
 54e:	9f 70       	andi	r25, 0x0F	; 15
 550:	99 0f       	add	r25, r25
 552:	99 0f       	add	r25, r25
 554:	49 2f       	mov	r20, r25
 556:	44 0f       	add	r20, r20
 558:	44 0f       	add	r20, r20
 55a:	94 0f       	add	r25, r20
 55c:	89 1b       	sub	r24, r25
 55e:	a9 01       	movw	r20, r18
 560:	02 c0       	rjmp	.+4      	; 0x566 <PIN_READ+0x7c>
 562:	55 95       	asr	r21
 564:	47 95       	ror	r20
 566:	8a 95       	dec	r24
 568:	e2 f7       	brpl	.-8      	; 0x562 <PIN_READ+0x78>
 56a:	ca 01       	movw	r24, r20
 56c:	81 70       	andi	r24, 0x01	; 1
 56e:	08 95       	ret
 570:	23 b3       	in	r18, 0x13	; 19
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	99 e8       	ldi	r25, 0x89	; 137
 576:	89 9f       	mul	r24, r25
 578:	91 2d       	mov	r25, r1
 57a:	11 24       	eor	r1, r1
 57c:	92 95       	swap	r25
 57e:	9f 70       	andi	r25, 0x0F	; 15
 580:	5e e1       	ldi	r21, 0x1E	; 30
 582:	95 9f       	mul	r25, r21
 584:	80 19       	sub	r24, r0
 586:	11 24       	eor	r1, r1
 588:	a9 01       	movw	r20, r18
 58a:	02 c0       	rjmp	.+4      	; 0x590 <PIN_READ+0xa6>
 58c:	55 95       	asr	r21
 58e:	47 95       	ror	r20
 590:	8a 95       	dec	r24
 592:	e2 f7       	brpl	.-8      	; 0x58c <PIN_READ+0xa2>
 594:	ca 01       	movw	r24, r20
 596:	81 70       	andi	r24, 0x01	; 1
 598:	08 95       	ret
 59a:	29 b3       	in	r18, 0x19	; 25
 59c:	30 e0       	ldi	r19, 0x00	; 0
 59e:	9d ec       	ldi	r25, 0xCD	; 205
 5a0:	89 9f       	mul	r24, r25
 5a2:	91 2d       	mov	r25, r1
 5a4:	11 24       	eor	r1, r1
 5a6:	92 95       	swap	r25
 5a8:	96 95       	lsr	r25
 5aa:	97 70       	andi	r25, 0x07	; 7
 5ac:	58 e2       	ldi	r21, 0x28	; 40
 5ae:	95 9f       	mul	r25, r21
 5b0:	80 19       	sub	r24, r0
 5b2:	11 24       	eor	r1, r1
 5b4:	a9 01       	movw	r20, r18
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <PIN_READ+0xd2>
 5b8:	55 95       	asr	r21
 5ba:	47 95       	ror	r20
 5bc:	8a 95       	dec	r24
 5be:	e2 f7       	brpl	.-8      	; 0x5b8 <PIN_READ+0xce>
 5c0:	ca 01       	movw	r24, r20
 5c2:	81 70       	andi	r24, 0x01	; 1
 5c4:	08 95       	ret
 5c6:	80 e0       	ldi	r24, 0x00	; 0
 5c8:	08 95       	ret

000005ca <TIMER_0_INIT>:

void TIMER_0_INIT(void)
{
	/*_TO_SELECT_NORMAL_MODE_*/
	#if TIMER_0_MODE == NORMAL
	CLR_BIT(TCCR0,3);
 5ca:	83 b7       	in	r24, 0x33	; 51
 5cc:	87 7f       	andi	r24, 0xF7	; 247
 5ce:	83 bf       	out	0x33, r24	; 51
	CLR_BIT(TCCR0,6);
 5d0:	83 b7       	in	r24, 0x33	; 51
 5d2:	8f 7b       	andi	r24, 0xBF	; 191
 5d4:	83 bf       	out	0x33, r24	; 51
	#elif TIMER_0_MODE == FAST_PWM
	SET_BIT(TCCR0,3);
	SET_BIT(TCCR0,6);
	#endif
	
	SET_BIT(SREG,7);    // to enable global int
 5d6:	8f b7       	in	r24, 0x3f	; 63
 5d8:	80 68       	ori	r24, 0x80	; 128
 5da:	8f bf       	out	0x3f, r24	; 63
	SET_BIT(TIMSK,0);   // to enable timer0 int
 5dc:	89 b7       	in	r24, 0x39	; 57
 5de:	81 60       	ori	r24, 0x01	; 1
 5e0:	89 bf       	out	0x39, r24	; 57
 5e2:	08 95       	ret

000005e4 <TIMER_0_START>:
	

}

void TIMER_0_START(u32 desired_time)
{
 5e4:	9b 01       	movw	r18, r22
 5e6:	ac 01       	movw	r20, r24
	u8  tick_time   = 1024 / 16;                    // result in micro second
	u32	total_ticks = (desired_time * 1000) / tick_time;
    num_of_ov       = total_ticks / 256;
 5e8:	a8 ee       	ldi	r26, 0xE8	; 232
 5ea:	b3 e0       	ldi	r27, 0x03	; 3
 5ec:	0e 94 2e 03 	call	0x65c	; 0x65c <__muluhisi3>
 5f0:	dc 01       	movw	r26, r24
 5f2:	cb 01       	movw	r24, r22
 5f4:	07 2e       	mov	r0, r23
 5f6:	7e e0       	ldi	r23, 0x0E	; 14
 5f8:	b6 95       	lsr	r27
 5fa:	a7 95       	ror	r26
 5fc:	97 95       	ror	r25
 5fe:	87 95       	ror	r24
 600:	7a 95       	dec	r23
 602:	d1 f7       	brne	.-12     	; 0x5f8 <TIMER_0_START+0x14>
 604:	70 2d       	mov	r23, r0
 606:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <num_of_ov>
 60a:	90 93 62 00 	sts	0x0062, r25	; 0x800062 <num_of_ov+0x1>
 60e:	a0 93 63 00 	sts	0x0063, r26	; 0x800063 <num_of_ov+0x2>
 612:	b0 93 64 00 	sts	0x0064, r27	; 0x800064 <num_of_ov+0x3>
	
	/*_TO_SELECT_1024_DEVISION_FACTOR_AT_PRE_SCALER_AND_START_TIMER_*/
	SET_BIT(TCCR0,0);
 616:	83 b7       	in	r24, 0x33	; 51
 618:	81 60       	ori	r24, 0x01	; 1
 61a:	83 bf       	out	0x33, r24	; 51
	CLR_BIT(TCCR0,1);
 61c:	83 b7       	in	r24, 0x33	; 51
 61e:	8d 7f       	andi	r24, 0xFD	; 253
 620:	83 bf       	out	0x33, r24	; 51
	SET_BIT(TCCR0,2);
 622:	83 b7       	in	r24, 0x33	; 51
 624:	84 60       	ori	r24, 0x04	; 4
 626:	83 bf       	out	0x33, r24	; 51
 628:	08 95       	ret

0000062a <TIMER_0_STOP>:
}
void TIMER_0_STOP(void)
{
	CLR_BIT(TCCR0,0);
 62a:	83 b7       	in	r24, 0x33	; 51
 62c:	8e 7f       	andi	r24, 0xFE	; 254
 62e:	83 bf       	out	0x33, r24	; 51
	CLR_BIT(TCCR0,1);
 630:	83 b7       	in	r24, 0x33	; 51
 632:	8d 7f       	andi	r24, 0xFD	; 253
 634:	83 bf       	out	0x33, r24	; 51
	CLR_BIT(TCCR0,2);
 636:	83 b7       	in	r24, 0x33	; 51
 638:	8b 7f       	andi	r24, 0xFB	; 251
 63a:	83 bf       	out	0x33, r24	; 51
 63c:	08 95       	ret

0000063e <__umulhisi3>:
 63e:	a2 9f       	mul	r26, r18
 640:	b0 01       	movw	r22, r0
 642:	b3 9f       	mul	r27, r19
 644:	c0 01       	movw	r24, r0
 646:	a3 9f       	mul	r26, r19
 648:	70 0d       	add	r23, r0
 64a:	81 1d       	adc	r24, r1
 64c:	11 24       	eor	r1, r1
 64e:	91 1d       	adc	r25, r1
 650:	b2 9f       	mul	r27, r18
 652:	70 0d       	add	r23, r0
 654:	81 1d       	adc	r24, r1
 656:	11 24       	eor	r1, r1
 658:	91 1d       	adc	r25, r1
 65a:	08 95       	ret

0000065c <__muluhisi3>:
 65c:	0e 94 1f 03 	call	0x63e	; 0x63e <__umulhisi3>
 660:	a5 9f       	mul	r26, r21
 662:	90 0d       	add	r25, r0
 664:	b4 9f       	mul	r27, r20
 666:	90 0d       	add	r25, r0
 668:	a4 9f       	mul	r26, r20
 66a:	80 0d       	add	r24, r0
 66c:	91 1d       	adc	r25, r1
 66e:	11 24       	eor	r1, r1
 670:	08 95       	ret

00000672 <_exit>:
 672:	f8 94       	cli

00000674 <__stop_program>:
 674:	ff cf       	rjmp	.-2      	; 0x674 <__stop_program>
